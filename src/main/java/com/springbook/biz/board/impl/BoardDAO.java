package com.springbook.biz.board.impl;import com.springbook.biz.board.BoardVo;import com.springbook.biz.common.JDBCUtil;import org.springframework.stereotype.Repository;import java.sql.Connection;import java.sql.PreparedStatement;import java.sql.ResultSet;import java.util.ArrayList;import java.util.List;/** * DAO (Data Access Object) */@Repository("boardDAO")public class BoardDAO {    //JDBC 관련 변수    private       Connection        conn = null;    private       PreparedStatement stmt = null;    private final ResultSet         rs   = null;    // SQL 명령어들    private final String BOARD_INSERT = "insert into board(title, writer, content) values(?,?,?)";    private final String BOARD_UPDATE = "update board set title=?, content=? where seq?";    private final String BOARD_DELETE = "delete fron board where seg=?";    private final String BOARD_GET    = "select * from board where seq=?";    private final String BOARD_LIST   = "select * from board order by seg desc";    public void insertBoard(BoardVo vo) {        System.out.println("===> JDBC로 insertBoard() 기능 처리");        try {            conn = JDBCUtil.getConnection();            assert conn != null;            stmt = conn.prepareStatement(BOARD_INSERT);            stmt.setString(1, vo.getTitle());            stmt.setString(2, vo.getWriter());            stmt.setString(3, vo.getContent());            stmt.executeUpdate();        } catch (Exception e) {            e.printStackTrace();        } finally {            JDBCUtil.close(stmt, conn);        }    }    public void deleteBoard(BoardVo vo) {        System.out.println("===> JDBC로 deleteBoard() 기능 처리");        try {            conn = JDBCUtil.getConnection();            stmt = conn.prepareStatement(BOARD_DELETE);            stmt.setInt(1, vo.getSeq());            stmt.executeUpdate();        } catch (Exception e) {            e.printStackTrace();        } finally {            JDBCUtil.close(stmt, conn);        }    }    public List<BoardVo> getBoardList(BoardVo vo) {        return new ArrayList<>();    }    public void updateBoard(BoardVo vo) {    }    public BoardVo getBoard(BoardVo vo) {        return new BoardVo();    }}