package com.springbook.biz.user.impl;import com.springbook.biz.board.BoardVo;import com.springbook.biz.user.UserVO;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.jdbc.core.JdbcTemplate;import org.springframework.jdbc.core.RowMapper;import org.springframework.stereotype.Repository;import java.sql.ResultSet;import java.sql.SQLException;import java.sql.Types;import java.util.List;@Repositorypublic class UserDAOSpring {    @Autowired    public JdbcTemplate jdbcTemplate;    private final String USER_INSERT = "INSERT INTO USERS(ID, PSS ,NAME) VALUES(?,?,?)";    public void insertUser(UserVO vo) {        jdbcTemplate.update(USER_INSERT, vo.getId(), vo.getPassword(), vo.getName());    }    private final String USER_UPDATE = "UPDATE USERS SET NAME = ?, ROLE = ? WHERE ID = ?";    public void updateUser(UserVO vo) {        Object[] params = {vo.getName(), vo.getRole(), vo.getId()};        int[] types= { Types.VARCHAR, Types.VARCHAR, Types.VARCHAR };        jdbcTemplate.update(BOARD_GET, params, types);    }    private final String BOARD_DELETE = "DELETE FROM USERS WHERE SEQ = ?";    private final String BOARD_GET    = "SELECT * FROM USERS WHERE SEQ = ?";    private final String BOARD_LIST   = "SELECT * FROM USERS ORDER BY SEQ DESC";    public void updateUser(BoardVo vo) {        System.out.println("===> Spring JDBC로 updateBoard() 기능 처리");        jdbcTemplate.update(USER_UPDATE, vo.getTitle(), vo.getWriter(), vo.getContent(), vo.getSeq());    }    public void deleteUser(BoardVo vo) {        System.out.println("===> Spring JDBC로 deleteBoard() 기능 처리");        jdbcTemplate.update(BOARD_DELETE, vo.getSeq());    }    public List<UserVO> getBoardList(BoardVo vo) {        System.out.println("===> Spring JDBC로 getBoardList() 기능 처리");        return jdbcTemplate.query(BOARD_GET, new UserRowMapper());    }    static class UserRowMapper implements RowMapper<UserVO> {        @Override        public UserVO mapRow(ResultSet rs, int rowNum) throws SQLException {            UserVO user = new UserVO();            user.setId(rs.getString("ID"));            user.setPassword(rs.getString("PASSWORD"));            user.setName(rs.getString("NAME"));            user.setRole(rs.getString("ROLE"));            return user;        }    }}